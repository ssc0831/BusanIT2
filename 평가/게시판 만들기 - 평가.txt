[도큐먼트 작성 – 컬렉션 생성]
use board
switched to db board

[자유게시판 - 도큐먼트 board에 컬렉션 생성]
freeboard_result = db.board.insertOne({name: "자유게시판"})
{
  acknowledged: true,
  insertedId: ObjectId("650bda605fdb941e926cc241")
}

freeboard_id = freeboard_result.insertedId
ObjectId("650bda605fdb941e926cc241")

[자유게시판 글 작성]
db.article.insertMany([
  {
    board_id: "freeboard_id",
    title: 'hello',
    content: 'hi, hello1',
    author: 'Karoid'
  },
  {
    board_id: "freeboard_id",
    title: 'hi',
    content: 'hi, hello2',
    author: 'Jeong'
  },
  {
    board_id: "freeboard_id",
    title: 'hi',
    content: 'hi, hello3',
    author: 'Hong',
    comments: [
      {
        author: 'karoid',
        content: 'hello Hong!'
      }
    ]
  }
])

{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("650bda765fdb941e926cc242"),
    '1': ObjectId("650bda765fdb941e926cc243"),
    '2': ObjectId("650bda765fdb941e926cc244")
  }
}

[비밀게시판 작성]
secretboard_id = db.board.insertOne({name: '비밀게시판'}).insertedId
ObjectId("650bda7e5fdb941e926cc245")

[비밀게시판 글 작성]
db.article.insertOne({
  board_id: "secretboard_id",
  title: 'my Secret Title',
  content: 'hi, hello1',
  author: 'noname'
})
{
  acknowledged: true,
  insertedId: ObjectId("650bda965fdb941e926cc246")
}

[자유게시판 도큐먼트 글 불러오기]
freeboard_id = db.board.find({name: '자유게시판'}).toArray()[0]._id
ObjectId("650bda605fdb941e926cc241")

[자유게시판 글만 나타내게 하기]
db.article.find({board_id: "freeboard_id"},{
_id: false,
board_id: false,
author: false,
comments: false})
{
  title: 'hello',
  content: 'hi, hello1'
}
{
  title: 'hi',
  content: 'hi, hello2'
}
{
  title: 'hi',
  content: 'hi, hello3'
}
[Karoid라는 특정 도큐먼트 찾기]
db.article.find({"comments.0.author": "Karoid"})

[모든글에 대한 추천수 필드 추가]
db.article.updateMany({},{$set: {upvote: 0}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 4,
  modifiedCount: 4,
  upsertedCount: 0
}
[비밀게시판 _id를 찾아서 게시판 추천수 모두 +1 증가하기]
secretboard_id = db.board.find({name: "비밀게시판"}).toArray()[0]._id
ObjectId("650bda7e5fdb941e926cc245")

db.article.updateMany({board_id: secretboard_id}, {$inc: {upvote: 1}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}

[댓글이 달린 자유게시판 글의 _id(작성자 Hong) 저장(ObjectId 값 저장)]
freeboard_id = db.board.find({name: "자유게시판"}).toArray()[0]._id
ObjectId("650bda605fdb941e926cc241")

doc_id = db.article.find({board_id: "freeboard_id", author: "Hong"}).toArray()[0]._id
ObjectId("650bda765fdb941e926cc244")

[Content 값 수정]
db.articel.updateOne({_id: 'doc_id'}, {$set: {content: 'updated'}})

{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}
[필드 안에 있는 요소 추가]
db.article.updateOne(
  { _id: 'doc_id' },  {
    $push: {comments: {author: "Quote", content: "reply"}}
})

{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}

[Comment 필드 안에 있는 요소 추가]
db.article.updateOne(
  { _id: 'doc_id' },  {
    $set: { "comments.$[karoidcomment].upvote": 0 }
  },
  {
    arrayFilters: [{ "karoidcomment.author": "Quote" }]
  }
)

{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}

[board의 article 컬렉션 삭제]
db.article.deleteMany({})
{
  acknowledged: true,
  deletedCount: 4
}

[board의 article 도큐먼트 삭제]
db.article.drop()
true

[board 도큐먼트 삭제]
db.board.drop()
true

[전체 도큐먼트 삭제]
db.dropDatabase()
{ ok: 1, dropped: 'board' }